# vim: filetype=yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test_simple_backends:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.7"
          - "3.9"
        additional-deps:
          - [dask-min]
          - []
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          miniforge-version: latest
          miniforge-variant: Mambaforge
          channel-priority: strict
          activate-environment: ibis
          python-version: ${{ matrix.python-version }}
          condarc-file: ci/condarc

      - name: set backends
        id: set_backends
        run: echo '::set-output name=backends::["csv", "dask", "hdf5", "pandas", "parquet", "sqlite"]'

      - name: merge environments
        run: ./ci/merge_and_update_env.sh ${{ join(fromJSON(steps.set_backends.outputs.backends), ' ') }} ${{ join(matrix.additional-deps, ' ') }}

      - name: install ibis
        run: pip install .

      - name: download backend data
        run: python ci/datamgr.py download

      - name: install backend data
        run: |
          set -euo pipefail

          for backend in ${{ join(fromJSON(steps.set_backends.outputs.backends), ' ') }}; do
            python ci/datamgr.py "$backend"
          done

      - name: run tests
        run: ./ci/run_tests.sh
        env:
          PYTEST_BACKENDS: ${{ join(fromJSON(steps.set_backends.outputs.backends), ' ') }}

      - name: publish test report
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: simple_backends_${{ matrix.python-version }}-${{ matrix.os }}-${{ join(matrix.additional-deps, '-') }}
          path: junit.xml

 
